openapi: 3.0.1
info:
  title: "Ecosyste.ms: Packages"
  description: "An open API service providing package, version and dependency metadata many open source software ecosystems and registries."
  contact:
    name: Ecosyste.ms
    email: support@ecosyste.ms
    url: https://ecosyste.ms 
  version: 1.0.0
  license:
    name: CC-BY-SA-4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/
externalDocs:
  description: GitHub Repository
  url: https://github.com/ecosyste-ms/packages
servers:
- url: https://packages.ecosyste.ms/api/v1
paths:
  /registries:
    get:
      summary: list registies
      operationId: getRegistries
      parameters:
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registry'
  /registries/{registryName}:
    get:
      summary: get a registry by name
      operationId: getRegistry
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
  /registries/{registryName}/packages:
    get:
      summary: get a list of packages from a registry
      operationId: getRegistryPackages
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
        - name: created_after
          in: query
          description: filter by created_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: filter by updated_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: field to order results by
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: direction to order results by
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
  /registries/{registryName}/package_names:
    get:
      summary: get a list of package names from a registry
      operationId: getRegistryPackageNames
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
        - name: created_after
          in: query
          description: filter by created_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: filter by updated_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: field to order results by
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: direction to order results by
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /registries/{registryName}/versions:
    get:
      summary: get a list of recently published versions from a registry
      operationId: getRegistryRecentVersions
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
        - name: created_after
          in: query
          description: filter by created_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: filter by updated_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: published_after
          in: query
          description: filter by published_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: field to order results by
          required: false
          schema: 
            type: string
        - name: order
          in: query
          description: direction to order results by
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionWithPackage'
  /registries/{registryName}/packages/{packageName}:
    get:
      summary: get a package by name
      operationId: getRegistryPackage
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - in: path
          name: packageName
          schema:
            type: string
          required: true
          description: name of package
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
  /registries/{registryName}/packages/{packageName}/dependent_packages:
    get:
      summary: get a list of packages that depend on a package
      operationId: getRegistryPackageDependentPackages
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - in: path
          name: packageName
          schema:
            type: string
          required: true
          description: name of package
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
        - name: created_after
          in: query
          description: filter by created_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: filter by updated_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: field to order results by
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: direction to order results by
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
  
  /registries/{registryName}/packages/{packageName}/versions:
    get:
      summary: get a list of versions for a package
      operationId: getRegistryPackageVersions
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - in: path
          name: packageName
          schema:
            type: string
          required: true
          description: name of package
        - name: page
          in: query
          description: pagination page number 
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return 
          required: false
          schema:
            type: integer
        - name: created_after
          in: query
          description: filter by created_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: updated_after
          in: query
          description: filter by updated_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: published_after
          in: query
          description: filter by published_at after given time
          required: false
          schema:
            type: string
            format: date-time
        - name: sort
          in: query
          description: field to order results by
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: direction to order results by
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
  /registries/{registryName}/packages/{packageName}/versions/{versionNumber}:
    get:
      summary: get a version of a package
      operationId: getRegistryPackageVersion
      parameters:
        - in: path
          name: registryName
          schema:
            type: string
          required: true
          description: name of registry
        - in: path
          name: packageName
          schema:
            type: string
          required: true
          description: name of package
        - in: path
          name: versionNumber
          schema:
            type: string
          required: true
          description: number of version
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
components:
  schemas:
    Registry:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        ecosystem:
          type: string
        default:
          type: boolean
        packages_count:
          type: integer
          format: int64
        github:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        packages_url:
          type: string
    Package:
      type: object
      properties:
        name:
          type: string
        ecosystem:
          type: string
        description:
          type: string
        homepage:
          type: string
        licenses:
          type: string
        repository_url:
          type: string
        keywords_array:
          type: array
          items: {}
        versions_count:
          type: integer
        latest_release_published_at:
          type: string
          format: date-time
        latest_release_number:
          type: string
        last_synced_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        registry_url:
          type: string
        documentation_url:
          type: string
        install_command:
          type: string
        versions_url:
          type: string
        metadata:
          type: object
        repo_metadata:
          type: object
        repo_metadata_updated_at:
          type: string
          format: date-time
        dependent_packages_count:
          type: integer
        downloads:
          type: integer
        downloads_period:
          type: string
    Version:
      type: object
      properties:
          number:
            type: string
          published_at:
            type: string
          licenses:
            type: string
          integrity:
            type: string
          status:
            type: string
          download_url:
            type: string
          registry_url:
            type: string
          documentation_url:
            type: string
          install_command:
            type: string
          metadata:
            type: object
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          dependencies:
            type: array
            items:
              $ref: '#/components/schemas/Dependency'
    VersionWithPackage:
      type: object
      properties:
        number:
          type: string
        published_at:
          type: string
        licenses:
          type: string
        integrity:
          type: string
        status:
          type: string
        download_url:
          type: string
        registry_url:
          type: string
        documentation_url:
          type: string
        install_command:
          type: string
        metadata:
            type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        package:
          type: object
          $ref: '#/components/schemas/Package'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
    Dependency:
      type: object
      properties:
        package_name:
          type: string
        requirements:
          type: string
        kind:
          type: string
        optional:
          type: boolean